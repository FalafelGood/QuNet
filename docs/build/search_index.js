var documenterSearchIndex = {"docs":
[{"location":"#QuNet","page":"QuNet","title":"QuNet","text":"","category":"section"},{"location":"","page":"QuNet","title":"QuNet","text":"CurrentModule = QuNet","category":"page"},{"location":"","page":"QuNet","title":"QuNet","text":"Modules = [QuNet]","category":"page"},{"location":"#QuNet.BasicNode","page":"QuNet","title":"QuNet.BasicNode","text":"The default QNode object. Nothing special, but nothing unspecial either ;-)\"\n\n\n\n\n\n","category":"type"},{"location":"#QuNet.Coords","page":"QuNet","title":"QuNet.Coords","text":"Coordinates of the QNode object in two or three spatial dimensions\n\n\n\n\n\n","category":"type"},{"location":"#QuNet.add-Tuple{QNetwork,QNode}","page":"QuNet","title":"QuNet.add","text":"Add a QNode object to the network.\n\nExample:\n```\nusing QuNet\nQ = QNetwork()\nA = BasicNode(\"A\")\nadd(Q, A)\n```\n\n\n\n\n\n","category":"method"},{"location":"#QuNet.percolate_vertices-Tuple{LightGraphs.AbstractGraph,Any,Array{Int64,N} where N}","page":"QuNet","title":"QuNet.percolate_vertices","text":"percolate_vertices(graph, p, exclude)\n\nPerform vertex percolation on graph with probability p, excluding specified vertices.\n\n\n\n\n\n","category":"method"},{"location":"#QuNet.remove-Tuple{QNetwork,QNode}","page":"QuNet","title":"QuNet.remove","text":"Remove a Qnode object from the network.\n\nThe convention for removal echos that of LightGraphs.jl. Suppose a given network has N nodes, and we want to remove the node with the id v.\n\nCheck if v < N . If false, simply pop the node from QNetwork.nodes\nElse, swap the nodes v and N, then pop from QNetworks.nodes\n\n\n\n\n\n","category":"method"}]
}
